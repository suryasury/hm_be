generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

enum roles {
  ADMIN
  DOCTOR
}

enum appointmentStatuses {
  SCHEDULED
  PENDING
  COMPLETED
  CANCELLED
  APPROVED
}

enum foodRelationEnum {
  BEFORE_MEAL
  AFTER_MEAL
  WITH_MEAL
}

enum dosageFormEnum {
  Tablet
  Capsule
  Powder
  Ointment
  Cream
  Gel
  Syrup
  Pastes
  Granules
  Pellets
  Lozenges
  Elixirs
  Tinctures
  Liniments
  Others
}

model hospitals {
  id                   String                 @id @default(cuid())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  name                 String
  isd_code             String?
  houseNumber          String?
  address1             String?
  address2             String?
  city                 String?
  state                String?
  pincode              String?
  country              String?
  phoneNumber          String
  email                String
  // roles         roles[]
  // roleFeatures  roleFeatures[]
  users                users[]
  // patients      patients[]
  appointments         appointments[]
  slots                slots[]
  patientPrescription  patientPrescription[]
  medicationStocks     medicationStocks[]
  appointmentFeedbacks appointmentFeedbacks[]
  hospitalPatients     hospitalPatients[]
  ailment              ailment[]
  documentTypes        documentTypes[]
  tokenNumberTrackers  tokenNumberTrackers[]
}

// model roles {
//   id           String         @id @default(cuid())
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   name         String
//   hospitalId   String
//   hospital     hospitals      @relation(fields: [hospitalId], references: [id])
//   // users        users[]
//   roleFeatures roleFeatures[]
// }

// model features {
//   id           String         @id @default(cuid())
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   name         String
//   roleFeatures roleFeatures[]
// }

// model roleFeatures {
//   id            String    @id @default(cuid())
//   createdAt     DateTime  @default(now())
//   updatedAt     DateTime  @updatedAt
//   isReadLimited Boolean   @default(false)
//   canCreate     Boolean   @default(false)
//   canRead       Boolean   @default(false)
//   canDelete     Boolean   @default(false)
//   role          roles     @relation(fields: [roleId], references: [id])
//   roleId        String
//   feature       features  @relation(fields: [featureId], references: [id])
//   featureId     String
//   hospitalId    String
//   hospital      hospitals @relation(fields: [hospitalId], references: [id])
// }

model users {
  id                 String         @id @default(cuid())
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  isAdmin            Boolean        @default(false)
  name               String
  email              String         @unique
  password           String
  profilePictureUrl  String?
  speciality         String?
  houseNumber        String?
  address1           String?
  address2           String?
  city               String?
  state              String?
  pincode            String?
  country            String?
  qualification      String?
  needPasswordChange Boolean        @default(true)
  phoneNumber        String
  isd_code           String
  role               roles
  isActive           Boolean        @default(true)
  isDeleted          Boolean        @default(false)
  // roleId            String
  hospitalId         String
  hospital           hospitals      @relation(fields: [hospitalId], references: [id])
  appointments       appointments[]
  doctorSlots        doctorSlots[]

  @@unique([email, hospitalId], name: "emailHospitalUniqueIdentifier")
  @@index([phoneNumber])
}

model slots {
  id                  String        @id @default(cuid())
  startTime           String
  endTime             String
  startTimeInDateTime DateTime
  endTimeInDateTime   DateTime
  isActive            Boolean       @default(true)
  isDeleted           Boolean       @default(false)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  hospitalId          String
  hospital            hospitals     @relation(fields: [hospitalId], references: [id])
  doctorSlots         doctorSlots[]

  @@unique([startTime, endTime, hospitalId], name: "slotTimeHospitalUniqueIdentifier")
}

model weekdays {
  id          String        @id @default(cuid())
  name        DayOfWeek
  doctorSlots doctorSlots[]
}

model doctorSlots {
  id                         String                @id @default(cuid())
  doctorId                   String
  createdAt                  DateTime              @default(now())
  updatedAt                  DateTime              @updatedAt
  slotId                     String
  weekDaysId                 String
  isDoctorAvailableForTheDay Boolean               @default(true)
  slotLimit                  Int                   @default(0)
  isEnabled                  Boolean               @default(true)
  isActive                   Boolean               @default(true)
  isDeleted                  Boolean               @default(false)
  doctor                     users                 @relation(fields: [doctorId], references: [id])
  slot                       slots                 @relation(fields: [slotId], references: [id])
  dayOfWeek                  weekdays              @relation(fields: [weekDaysId], references: [id])
  appointments               appointments[]
  tokenNumberTrackers        tokenNumberTrackers[]

  @@unique([doctorId, slotId, weekDaysId], name: "doctorWeekDaySlotIdentifier")
}

model patients {
  id                     String                   @id @default(cuid())
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  name                   String?
  email                  String                   @unique
  password               String
  isEmailVerified        Boolean                  @default(false)
  isMobileNumberVerified Boolean                  @default(false)
  phoneNumber            String                   @unique
  isd_code               String
  dateOfBirth            DateTime?
  gender                 String?
  profilePictureUrl      String?
  bloodGroup             String?
  houseNumber            String?
  address1               String?
  address2               String?
  city                   String?
  state                  String?
  pincode                String?
  country                String?
  isActive               Boolean                  @default(true)
  isDeleted              Boolean                  @default(false)
  appointments           appointments[]
  patientPrescription    patientPrescription[]
  patientAppointmentDocs patientAppointmentDocs[]
  appointmentFeedbacks   appointmentFeedbacks[]
  hospitalPatients       hospitalPatients[]
  // hospitalId             String
  // hospital               hospitals @relation(fields: [hospitalId], references: [id])
  // @@unique([email], name: "patientEmailUniqueIdentifierr")

  @@index([email, phoneNumber])
}

model hospitalPatients {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  hospitalId String
  patientId  String
  hospital   hospitals @relation(fields: [hospitalId], references: [id])
  patient    patients  @relation(fields: [patientId], references: [id])

  @@index([hospitalId, patientId])
}

model appointments {
  id                     String                   @id @default(cuid())
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  doctorSlotId           String
  doctorId               String
  patientId              String
  hospitalId             String
  remarks                String?
  doctorRemarks          String?
  feverLevel             String?
  bloodPreassure         String?
  pulse                  String?
  patientWeight          String?
  otherVitalRemarks      String?
  ailmentId              String
  tokenNumber            String
  appointmentStatus      appointmentStatuses
  appointmentDate        DateTime
  isFeedbackProvided     Boolean                  @default(false)
  hospital               hospitals                @relation(fields: [hospitalId], references: [id])
  patient                patients                 @relation(fields: [patientId], references: [id])
  doctor                 users                    @relation(fields: [doctorId], references: [id])
  doctorSlots            doctorSlots              @relation(fields: [doctorSlotId], references: [id])
  ailment                ailment                  @relation(references: [id], fields: [ailmentId])
  patientPrescription    patientPrescription[]
  patientAppointmentDocs patientAppointmentDocs[]
  appointmentFeedbacks   appointmentFeedbacks?
}

model patientPrescription {
  id                  String             @id @default(cuid())
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  appointmentId       String
  appointment         appointments       @relation(fields: [appointmentId], references: [id])
  patientId           String
  patient             patients           @relation(fields: [patientId], references: [id])
  hospitalId          String
  prescriptionRemarks String?
  hospital            hospitals          @relation(fields: [hospitalId], references: [id])
  durationInDays      Int
  medicationStockId   String
  medicationStock     medicationStocks   @relation(fields: [medicationStockId], references: [id])
  foodRelation        foodRelationEnum
  prescriptionDays    prescriptionDays[]
}

model prescriptionDays {
  id                           String                  @id @default(cuid())
  createdAt                    DateTime                @default(now())
  updatedAt                    DateTime                @updatedAt
  prescriptionId               String
  prescriptionDate             DateTime
  isPrescriptionTakenForTheDay Boolean                 @default(false)
  prescriptionTimeOfDay        prescriptionTimeOfDay[]
  patientPrescription          patientPrescription     @relation(fields: [prescriptionId], references: [id])
}

model prescriptionTimeOfDay {
  id                  String           @id @default(cuid())
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  timeOfDay           String
  isPrescriptionTaken Boolean          @default(false)
  prescriptionDays    prescriptionDays @relation(fields: [prescriptionDayId], references: [id])
  prescriptionDayId   String
}

model patientAppointmentDocs {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  documentName   String
  bucketPath     String
  fileName       String
  fileExtension  String
  documentTypeId String
  contentType    String
  patientId      String
  appointmentId  String
  isDeleted      Boolean       @default(false)
  patient        patients      @relation(fields: [patientId], references: [id])
  appointment    appointments  @relation(fields: [appointmentId], references: [id])
  documentTypes  documentTypes @relation(fields: [documentTypeId], references: [id])
}

model appointmentFeedbacks {
  id                  String       @id @default(cuid())
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  isActive            Boolean      @default(true)
  isDeleted           Boolean      @default(false)
  appointmentId       String       @unique
  patientId           String
  hospitalId          String
  overallSatisfaction Int
  feedBackRemarks     String
  appointment         appointments @relation(fields: [appointmentId], references: [id])
  patient             patients     @relation(fields: [patientId], references: [id])
  hospital            hospitals    @relation(fields: [hospitalId], references: [id])
}

model medicationStocks {
  id                  String                @id @default(cuid())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  medicationName      String
  code                String
  description         String
  manufacturer        String
  isActive            Boolean               @default(true)
  isDeleted           Boolean               @default(false)
  expirationDate      DateTime
  dosageForm          dosageFormEnum
  medicationDosage    String
  hospitalId          String
  hospital            hospitals             @relation(fields: [hospitalId], references: [id])
  patientPrescription patientPrescription[]
}

model ailment {
  id           String         @id @default(cuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  name         String
  description  String?
  isActive     Boolean        @default(true)
  isDefault    Boolean        @default(false)
  isDeleted    Boolean        @default(false)
  hospitalId   String
  appointments appointments[]
  hopital      hospitals      @relation(fields: [hospitalId], references: [id])

  @@fulltext([name])
}

model documentTypes {
  id                     String                   @id @default(cuid())
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  name                   String
  description            String?
  isActive               Boolean                  @default(true)
  isDeleted              Boolean                  @default(false)
  isDefault              Boolean                  @default(false)
  hospitalId             String
  hopital                hospitals                @relation(fields: [hospitalId], references: [id])
  patientAppointmentDocs patientAppointmentDocs[]
}

model tokenNumberTrackers {
  id           String      @id @default(cuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  doctorSlotId String
  date         DateTime
  currentValue Int
  isActive     Boolean     @default(true)
  isDeleted    Boolean     @default(false)
  hospitalId   String
  hopital      hospitals   @relation(fields: [hospitalId], references: [id])
  doctorSlot   doctorSlots @relation(fields: [doctorSlotId], references: [id])

  @@unique([doctorSlotId, date], name: "doctorSlotDateuniqueIdentifier")
  @@unique([doctorSlotId, date, hospitalId], name: "doctorSlotDateHospitalUniqueIdentifier")
}
